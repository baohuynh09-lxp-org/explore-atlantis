version: 3
projects:
  - &template_project
    apply_requirements: [mergeable,approved] #Requirements that must be satisfied before atlantis apply can be run
    workflow: awsWorkflow
    dir: provisioning/
    autoplan:                                                     
      enabled: false

  #---------------------------#
  #       dev_sandbox         #
  #---------------------------#
  -
    <<: *template_project
    name: dev_sandbox-network
  -
    <<: *template_project
    name: dev_sandbox-iamRolePolicy
  -
    <<: *template_project
    name: dev_sandbox-monitoring
  -
    <<: *template_project
    name: dev_sandbox-eks
  -
    <<: *template_project
    name: dev_sandbox-database
  -
    <<: *template_project
    name: dev_sandbox-redisKafka
  -
    <<: *template_project
    name: dev_sandbox-efscsi
  -
    <<: *template_project
    name: dev_sandbox-imessage

  #---------------------------#
  #       macquarie-uat       #
  #---------------------------#
  -
    <<: *template_project
    name: macquarie_uat-network
  -
    <<: *template_project
    name: macquarie_uat-iamRolePolicy
  -
    <<: *template_project
    name: macquarie_uat-monitoring
  -
    <<: *template_project
    name: macquarie_uat-eks
  -
    <<: *template_project
    name: macquarie_uat-database
  -
    <<: *template_project
    name: macquarie_uat-redisKafka


workflows:
  awsWorkflow:
    plan:
      steps:
      - env:   # extract saas environment name
          name: ENV
          command: "echo $PROJECT_NAME | awk -F'-' '{print $1}'"
      - env:   # extract component/target name
          name: COMPONENT
          command: "echo $PROJECT_NAME | awk -F'-' '{print $2}'"
      - run: | # get IAM credentials to access remote state file (s3/blobstorage)
          eval export AWS_ACCESS_KEY_ID=\${${ENV}_accesskey}
          eval export AWS_SECRET_ACCESS_KEY=\${${ENV}_secretkey}
      - run: | # prepare TF configuration files
          rm -rf .terraform
          find ./components/* -type d -maxdepth 1 -exec cp variables.tf {} \;
          find ./components/* -type d -maxdepth 1 -exec cp local.tf {} \;
      - run: | # terraform init
          terraform init -backend-config=env/${ENV}/backend.tf

      - run: | # terraform plan
          terraform plan -target=module.${COMPONENT} \
                         -var-file=env/${ENV}/terraform.tfvars \
                         -input=false \
                         -out $PLANFILE
          echo "PLANFILE: $PLANFILE"

    apply:
      steps:
      - run: | # terraform apply
          echo "PLANFILE: $PLANFILE"
          terraform apply $PLANFILE

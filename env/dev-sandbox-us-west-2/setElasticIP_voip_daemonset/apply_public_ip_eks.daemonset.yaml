apiVersion: apps/v1
kind: DaemonSet
#kind: Deployment
metadata:
  name: eksstaticip-deployment
  labels:
    app: eksstaticip
spec:
  #replicas: 1
  selector:
    matchLabels:
      app: eksstaticip
  template:
    metadata:
      labels:
        app: eksstaticip
    spec:
      tolerations:
      - key: nodepool_voip
        operator: Equal
        value: "true"
        effect: NoSchedule
      nodeSelector:
        nodepool_voip: "true"

      hostNetwork: true
      initContainers:
      - name: eip
        image: nsnow/aws-cli-jq:1
        command:
        - /bin/bash
        - -xec
        - |
          INSTANCE_ID=$(curl http://169.254.169.254/latest/meta-data/instance-id)
          PUBLIC_IP_TO_DISASSOCIATE=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
          REGION=$(curl --silent http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region)
          NETWORK_INTERFACE_ID=$(aws ec2 describe-network-interfaces --filters Name=addresses.association.public-ip,Values=$PUBLIC_IP_TO_DISASSOCIATE --region=$REGION | jq '.NetworkInterfaces[] | {NetworkInterfaceId}' | jq -r '.NetworkInterfaceId')
          ALLOCATION_ID=$(aws ec2 describe-addresses --filters "Name=tag:nodepool_voip,Values=true" --region=$REGION | jq '.Addresses | .[] | select(.AssociationId == null)' | jq '{AllocationId}'| jq -r '.AllocationId')
          ALLOCATION_ID=$(echo $ALLOCATION_ID | cut -d ' ' -f1)
          if [[ $ALLOCATION_ID == "" ]]
          then
            echo "No Elastic IP is available. Gracefully exiting ...."
            exit 0
          fi
          echo "Attempt to Associate Address will start. Check logs for error if there is a Crash Back Loop Off"
          aws ec2 associate-address --allocation-id "$ALLOCATION_ID" --network-interface-id "$NETWORK_INTERFACE_ID" --region=$REGION --no-allow-reassociation
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: awsKeyId
              name: eksstaticipsecret
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: awsSecretKey
              name: eksstaticipsecret
      containers:
      - name: pause
        image: gcr.io/google_containers/pause
        #resources:
        #  limits:
        #    cpu: 50m
        #    memory: 10Mi
        #  requests:
        #    cpu: 50m
        #    memory: 10Mi
      #- name: myapp-container
      #  image: busybox
      #  command: ['sh', '-c', 'echo The app is running! && sleep 15']

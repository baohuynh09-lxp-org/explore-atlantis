apiVersion: apps/v1
#kind: DaemonSet
kind: Deployment
metadata:
  name: ubuntu
  labels:
    app: ubuntu
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ubuntu
  template:
    metadata:
      labels:
        app: ubuntu
    spec:
      tolerations:
      - key: public_workload
        operator: Equal
        value: "true"
        effect: NoSchedule
      nodeSelector:
        public_workload: "true"

      #hostNetwork: true
      #initContainers:
      #- name: eip
      #  image: nsnow/aws-cli-jq:1
      #  command:
      #  - /bin/bash
      #  - -xec
      #  - |
      #    INSTANCE_ID=$(curl http://169.254.169.254/latest/meta-data/instance-id)
      #    PUBLIC_IP_TO_DISASSOCIATE=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
      #    REGION=$(curl --silent http://169.254.169.254/latest/dynamic/instance-identity/document | jq -r .region)
      #    #NODEGROUP_NAME_FROM_TAGS=$(aws ec2 describe-tags --filters "Name=resource-id,Values=$INSTANCE_ID" --region=$REGION | jq '.Tags[] | select(.Key == "aws:autoscaling:groupName") | {Value}' | jq -r '.Value')
      #    NETWORK_INTERFACE_ID=$(aws ec2 describe-network-interfaces --filters Name=addresses.association.public-ip,Values=$PUBLIC_IP_TO_DISASSOCIATE --region=$REGION | jq '.NetworkInterfaces[] | {NetworkInterfaceId}' | jq -r '.NetworkInterfaceId')
      #    #ALLOCATION_ID=$(aws ec2 describe-addresses --filters "Name=tag:public_workload,Values=true" --region=$REGION | jq '.Addresses | .[] | select(.AssociationId == null)' | jq '{AllocationId}'| jq -r '.AllocationId')
      #    ALLOCATION_ID=$(aws ec2 describe-addresses --filters "Name=tag:abc,Values=xyz" --region=$REGION | jq '.Addresses | .[] | select(.AssociationId == null)' | jq '{AllocationId}'| jq -r '.AllocationId')
      #    ALLOCATION_ID=$(echo $ALLOCATION_ID | cut -d ' ' -f1)
      #    sleep 9999999999999999999999
      #  env:
      #  - name: AWS_ACCESS_KEY_ID
      #    valueFrom:
      #      secretKeyRef:
      #        key: awsKeyId
      #        name: eksstaticipsecret
      #  - name: AWS_SECRET_ACCESS_KEY
      #    valueFrom:
      #      secretKeyRef:
      #        key: awsSecretKey
      #        name: eksstaticipsecret
      containers:
      - name: ubuntu
        image: ubuntu:18.04
        command:
        - sleep 
        - "999999999999999999"
        #resources:
        #  limits:
        #    cpu: 50m
        #    memory: 10Mi
        #  requests:
        #    cpu: 50m
        #    memory: 10Mi
